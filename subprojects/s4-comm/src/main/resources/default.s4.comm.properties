s4.comm.emitter.class=org.apache.s4.comm.tcp.TCPEmitter
s4.comm.emitter.remote.class=org.apache.s4.comm.tcp.TCPRemoteEmitter
s4.comm.listener.class=org.apache.s4.comm.tcp.TCPListener

# I/O channel connection timeout, when applicable (e.g. used by netty)
s4.comm.timeout=1000

# NOTE: the following numbers should be tuned according to the application, use case, and infrastructure

# how many threads to use for the sender stage (i.e. serialization)
s4.sender.parallelism=1
# maximum number of events in the buffer of the sender stage
s4.sender.workQueueSize=10000
# maximum sending rate from a given node, in events / s (used with throttling sender executors)
s4.sender.maxRate=200000

# how many threads to use for the *remote* sender stage (i.e. serialization)
s4.remoteSender.parallelism=1
# maximum number of events in the buffer of the *remote* sender stage
s4.remoteSender.workQueueSize=10000
# maximum *remote* sending rate from a given node, in events / s (used with throttling *remote* sender executors)
s4.remoteSender.maxRate=200000

# maximum number of pending writes to a given comm channel
s4.emitter.maxPendingWrites=1000

# maximum number of events in the buffer of the processing stage
s4.stream.workQueueSize=10000

